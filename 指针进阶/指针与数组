数组是C内建的数据结构，彻底理解数组及其用法是开发高效应用程序的基础。曲解数组和指针的用法会造成难以查找的错误，应用程序的性能
也难以达到最优。数组和指针表示法紧密关联，在合适的上下文可以互换。

一种常见的错误观点是指针和数组是完全可以互换的。尽管数组名字有时可以当作指针来用，但数组的名字不是指针。数组表示法也可以和指针
一起使用，但两者明显不同，也不一定能互换。理解这种差别可以帮助你避免错误地使用这些表示法。比如说，尽管数组使用自身的名字可以返回
数组的地址。但是名字本身不能作为赋值操作的目标。

本章首先概述数组，然后研究数组表示法和指针表示法的相同点和不同点。可以用malloc类函数创建数组，这些函数提供比传统的数组声明更灵活
的机制。我们会看到如何用realloc来改变已经为一个数组分配的内存大小。

为数组动态分配内存可以为代码带来很大的改变，特别是处理二维或多维数组的情况，因为我们得确保为数组分配的内存是连续的。

我们也会探索传递和返回数组时可能发生的问题。在大部分情况下，必须传入数组长度以便函数正确的处理数组。数组的内部表示不带有长度信息
函数就没有标准的方法得到函数的终点。即使不常用，我们也会研究如何在c中创建不规则数组。不规则数组是二维数组，每一行都可能包含不同的
列数

1.1 数组概述
1.2 一维数组
1.3 二维数组
1.4 多维数组
2 指针表示法和数组
3 用malloc创建一维数组
4 用realloc调整数组长度
5.1 传递一维数组
5.2 用数组表示法
5.3 用指针表示法
6使用指针的一维数组
7指针和多维数组
8传递多维数组
9动态分配二维数组
9.1分配可能不连续的内存
9.2分配连续内存
10.1不规则数组和指针
10.11小结



